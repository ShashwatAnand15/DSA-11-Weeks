Time complexity of all searching and sorting algorithms (All log are base 2)
Binary Search -> O(logn) 
Linear Search -> O(n)
Quick Sort ->    O(nlogn), worst case is O(n^2)
Merge Sort ->    O(nlogn)
Insertion Sort-> O(n^2)
Bubble Sort->    O(n^2)
Heap Sort ->     O(nlogn)
Selection Sort ->O(n^2)
Height of CBT(Complete Binary Tree) -> O(logn)
Insertion in Heap -> O(logn)
Construct Heap ->O(nlogn)
Delete from Heap ->O(logn)
Huffman ->O(nlogn)
### V = Vertices, E = Edges
Prims algorithm ->For matrix O(n^2), For Heap O((V+E)logV) 
Kruskal algorithm ->O(ElogE)
DFS -> O(V + E)
BFS -> O(V + E)
All pair shortest (Floyd Warshall) -> O(n^3)
Dijkstra -> O(V^2)
